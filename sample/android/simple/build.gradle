buildscript {
  project.apply from: "${rootDir}/constants.gradle"
  project.apply from: "${rootDir}/android/constants.gradle"
  project.apply from: "${rootDir}/sample/android/constants.gradle"

  repositories {
    google()
    jcenter()
  }

  dependencies {
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin"
    classpath "com.android.tools.build:gradle:$project.ext.gradle"
    classpath "com.github.dcendents:android-maven-gradle-plugin:$androidMavenGradle"
  }
}

repositories {
  google()
  jcenter()
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

project.apply from: "${rootDir}/constants.gradle"
project.apply from: "${rootDir}/android/constants.gradle"
project.apply from: "${rootDir}/sample/android/constants.gradle"

configurations.all {
  // Make sure the latest JitPack releases are used.
  resolutionStrategy.cacheChangingModulesFor 24, 'hours'
}

android {
  compileSdkVersion compileSdk

  defaultConfig {
    applicationId "org.swiften.redux.android.sample"
    minSdkVersion minSdk
    targetSdkVersion targetSdk
    versionCode project.ext.versionCode
    versionName project.ext.versionName

    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
  }

  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }
}

dependencies {
  implementation fileTree(dir: 'libs', include: ['*.jar'])
  api project(':common:middleware')
  api project(':common:final-store')
  api project(':common:common-saga')
  api project(':common:rx-saga')
  api project(':android:core')
  api project(':android:recycler-view')
  api project(':android:router')
  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin"
  implementation "androidx.appcompat:appcompat:$appCompat"
  implementation "androidx.recyclerview:recyclerview:$recyclerView"
  implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
  implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinCoroutines"
  implementation "com.beust:klaxon:5.0.1"
  implementation 'com.camerakit:camerakit:1.0.0-beta3.10'
  implementation 'com.camerakit:jpegkit:0.1.0'
  debugImplementation "com.squareup.leakcanary:leakcanary-android:$leakCanary"
  releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leakCanary"
  debugImplementation "com.squareup.leakcanary:leakcanary-support-fragment:$leakCanary"
}

// TODO Investigate why this fails locally.
afterEvaluate { project ->
  project.tasks.lint { onlyIf { return false } }
}
