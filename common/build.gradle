buildscript {
  project.apply from: "${rootDir}/constants.gradle"

  repositories {
    jcenter()
  }

  dependencies {
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin"

    // https://github.com/palantir/gradle-jacoco-coverage
    classpath 'com.palantir:jacoco-coverage:0.4.0'
  }
}

plugins {
  id 'org.jetbrains.kotlin.jvm' version '1.3.20'
  id 'com.github.kt3k.coveralls' version '2.8.2'
}

repositories {
  jcenter()
}

apply plugin: "com.palantir.jacoco-full-report"

subprojects {
  repositories {
    jcenter()
  }

  apply plugin: "maven"
  apply plugin: "kotlin"
  apply plugin: "jacoco"
  group = 'com.github.protoman92'
  version '1.0-SNAPSHOT'

  project.apply from: "${rootDir}/constants.gradle"

  configurations.all {
    // Make sure the latest JitPack releases are used.
    resolutionStrategy.cacheChangingModulesFor 24, 'hours'
  }

  compileKotlin {
    kotlinOptions {
      jvmTarget = project.ext.jvmTarget
    }
  }

  compileTestKotlin {
    kotlinOptions {
      jvmTarget = '1.8'
    }
  }

  dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7"
    testImplementation "junit:junit:$junit"
  }

  test {
    maxHeapSize = project.ext.testHeapSize
  }
}

project(':common:common-core') {
  configurations { testArtifacts.extendsFrom testRuntime }

  task testJar (type: Jar) {
    classifier "test"
    from sourceSets.test.output
  }

  artifacts {
    testArtifacts testJar
  }

  dependencies {
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinCoroutines"
  }
}

project(':common:common-middleware') {
  dependencies {
    api project(':common:common-core')
    testApi project(':common:common-store')
  }
}

project(':common:common-router') {
  dependencies {
    api project(':common:common-core')
    api project(':common:common-middleware')
    testApi project(':common:common-store')
  }
}

project(':common:common-saga') {
  configurations { testArtifacts.extendsFrom testRuntime }

  task testJar (type: Jar) {
    classifier "test"
    from sourceSets.test.output
  }

  artifacts {
    testArtifacts testJar
  }

  dependencies {
    api project(':common:common-core')
    api project(':common:common-middleware')
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinCoroutines"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockito"
  }
}

project(':common:common-rx-saga') {
  dependencies {
    api project(':common:common-core')
    api project(':common:common-middleware')
    api project(':common:common-saga')
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-rx2:$kotlinCoroutines"
    implementation "io.reactivex.rxjava2:rxkotlin:$rxKotlin"
    testApi project (path: ":common:common-saga", configuration: 'testArtifacts')
  }
}

project(':common:common-store') {
  dependencies {
    api project(':common:common-core')
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinCoroutines"
    testApi project (path: ":common:common-core", configuration: 'testArtifacts')
  }
}

project(':common:common-ui') {
  dependencies {
    api project(':common:common-core')
    testApi project(':common:common-store')
  }
}

project(':common:common-all') {
  dependencies {
    api project(':common:common-core')
    api project(':common:common-store')
    api project(':common:common-middleware')
    api project(':common:common-router')
    api project(':common:common-saga')
    api project(':common:common-rx-saga')
    api project(':common:common-ui')
  }
}
