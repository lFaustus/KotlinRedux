buildscript {
  project.apply from: "${rootDir}/constants.gradle"
  project.apply from: "${rootDir}/android/constants.gradle"

  repositories {
    google()
    jcenter()
  }

  dependencies {
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin"
    classpath "com.android.tools.build:gradle:$project.ext.gradle"
    classpath "com.github.dcendents:android-maven-gradle-plugin:$androidMavenGradle"
  } 
}

plugins {
  id 'org.jetbrains.kotlin.jvm' version '1.3.11'
  id 'com.github.kt3k.coveralls' version '2.8.2'
}

repositories {
  google()
  jcenter()
}

subprojects {
  repositories {
    google()
    jcenter()
  }
  
  apply plugin: 'com.android.library'
  apply plugin: 'kotlin-android'
  apply plugin: 'com.github.dcendents.android-maven'

  project.apply from: "${rootDir}/constants.gradle"
  project.apply from: "${rootDir}/android/constants.gradle"
  group = 'com.github.protoman92'
  version '1.0-SNAPSHOT'

  configurations.all {
    // Make sure the latest JitPack releases are used.
    resolutionStrategy.cacheChangingModulesFor 24, 'hours'
  }

  android {
    compileSdkVersion compileSdk

    defaultConfig {
      minSdkVersion minSdk
      targetSdkVersion targetSdk
      versionCode versionCode
      versionName versionName

      testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
      release {
        minifyEnabled false
        proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
      }
    }
  }

  dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin"
    testImplementation "junit:junit:$junit"
    androidTestImplementation "androidx.test:runner:$testRunner"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso"
    androidTestImplementation "androidx.test.ext:junit:$androidxJunit"
  }

  test {
    maxHeapSize = project.ext.testHeapSize
  }
}

project('ui') {
  dependencies {
    api project(':common:core')
    api project(':common:ui')
  }
}

project('lifecycle') {
  dependencies {
    api project(':common:core')
    api project(':common:ui')
    implementation "androidx.appcompat:appcompat:$appCompat"
  }
}

project('recycler-view') {
  dependencies {
    api project(':android:ui')
    implementation "androidx.recyclerview:recyclerview:$recyclerView"
  }
}

project('core-rx-saga') {
  dependencies {
    api project(':common:common-saga')
    api project(':common:rx-saga')
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinCoroutines"
    implementation "io.reactivex.rxjava2:rxkotlin:$rxKotlin"
  }
}

project('livedata-rx-saga') {
  dependencies {
    api project(':common:common-saga')
    api project(':common:rx-saga')
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-rx2:$kotlinCoroutines"
    implementation "androidx.lifecycle:lifecycle-livedata:$lifecycle"
    testImplementation "androidx.arch.core:core-testing:$androidxCoreTest"
  }
}

project('router') {
  dependencies {
    api project(':common:core')
    api project(':common:router')
    implementation "androidx.appcompat:appcompat:$appCompat"
  }
}
