buildscript {
  project.apply from: "${rootDir}/constants.gradle"

  repositories {
    mavenCentral()
  }

  dependencies {
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"

    // https://github.com/palantir/gradle-jacoco-coverage
    classpath 'com.palantir:jacoco-coverage:0.4.0'
  }
}

plugins {
  id 'org.jetbrains.kotlin.jvm' version '1.3.11'
  id 'com.github.kt3k.coveralls' version '2.8.2'
}

repositories {
  mavenCentral()
  maven { url = "https://jitpack.io" }
}

apply plugin: "com.palantir.jacoco-full-report"

subprojects {
  group 'org.swiften'
  version '1.0-SNAPSHOT'

  repositories {
    jcenter()
    maven { url = "https://jitpack.io" }
  }

  apply plugin: "kotlin"
  apply plugin: "jacoco"
    
  project.apply from: "${rootDir}/constants.gradle"

  configurations.all {
    // Make sure the latest JitPack releases are used.
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
  }
  
  compileKotlin {
    kotlinOptions {
      jvmTarget = jvmTarget
    }
  }

  compileTestKotlin {
    kotlinOptions {
      jvmTarget = jvmTarget
    }
  }

  dependencies {
    implementation "com.github.protoman92:KotlinFP:master-SNAPSHOT"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinCoroutines"
    testImplementation "org.testng:testng:+"
  }

  test {
    useTestNG()
  }
}

project(':core') {
  project.group = 'org.swift.redux.core'
}

project(':middleware') {
  project.group = 'org.swift.redux.middleware'

  dependencies {
    api project(':core')
    testApi project(':simple-store')
  }
}

project(':router') {
  project.group = 'org.swift.redux.router'

  dependencies {
    api project(':core')
    api project(':middleware')
    testApi project(':simple-store')
  }
}

project(':simple-store') {
  project.group = 'org.swift.redux.core'

  sourceSets {
    test {
      kotlin {
        srcDirs += "${rootDir}/testing/src/test"
      }
    }
  }
  
  dependencies {
    api project(':core')
    testApi project(':testing')
  }
}

project(':testing') {
  project.group = 'org.swift.redux.testing'

  dependencies {
    testApi project(':core')
  }
}

project(':ui') {
  project.group = 'org.swift.redux.ui'

  dependencies {
    api project(':core')
  }
}
