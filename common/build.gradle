buildscript {
  project.apply from: "${rootDir}/constants.gradle"

  repositories {
    jcenter()
  }

  dependencies {
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin"

    // https://github.com/palantir/gradle-jacoco-coverage
    classpath 'com.palantir:jacoco-coverage:0.4.0'
  }
}

plugins {
  id 'org.jetbrains.kotlin.jvm' version '1.3.11'
  id 'com.github.kt3k.coveralls' version '2.8.2'
}

repositories {
  jcenter()
  maven { url = "https://jitpack.io" }
}

apply plugin: "com.palantir.jacoco-full-report"

subprojects {
  repositories {
    jcenter()
    maven { url = "https://jitpack.io" }
  }

  apply plugin: "kotlin"
  apply plugin: "jacoco"

  project.apply from: "${rootDir}/constants.gradle"

  configurations.all {
    // Make sure the latest JitPack releases are used.
    resolutionStrategy.cacheChangingModulesFor 24, 'hours'
  }

  compileKotlin {
    kotlinOptions {
      jvmTarget = project.ext.jvmTarget
    }
  }

  compileTestKotlin {
    kotlinOptions {
      jvmTarget = '1.8'
    }
  }

  dependencies {
    implementation "com.github.protoman92:KotlinFP:master-SNAPSHOT"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    testImplementation "org.testng:testng:$testNG"
  }

  test {
    useTestNG()
    outputs.upToDateWhen { false }
  }
}

project('core') {}

project('middleware') {
  dependencies {
    api project(':common:core')
    testApi project(':common:simple-store')
  }
}

project('router') {
  dependencies {
    api project(':common:core')
    api project(':common:middleware')
    testApi project(':common:simple-store')
  }
}

project('saga') {
  dependencies {
    api project(':common:core')
    api project(':common:middleware')
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinCoroutines"
  }
}

project('simple-store') {
  dependencies {
    api project(':common:core')
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinCoroutines"
  }
}

project('ui') {
  dependencies {
    api project(':common:core')
    testApi project(':common:simple-store')
  }
}
